mods.vitellary.name=Crystalline
mods.CrystallineHelper.name=Crystalline




# - Placement names -

entities.vitellary/boostbumper.placements.name.boost_bumper=Boost Bumper
entities.vitellary/fillcrystal.placements.name.fill_crystal=Fill Crystal
entities.vitellary/customprologuebridge.placements.name.custom_prologue_bridge=Custom Prologue Bridge
entities.vitellary/fillcrystal.placements.name.fill_crystal=Fill Crystal
entities.vitellary/flagsequencecontroller.placements.name.flag_sequence_controller=Flag Sequence Controller
entities.vitellary/forcedashcrystal.placements.name.up=Force Dash Crystal (Up)
entities.vitellary/forcedashcrystal.placements.name.upright=Force Dash Crystal (Up Right)
entities.vitellary/forcedashcrystal.placements.name.right=Force Dash Crystal (Right)
entities.vitellary/forcedashcrystal.placements.name.downright=Force Dash Crystal (Down Right)
entities.vitellary/forcedashcrystal.placements.name.down=Force Dash Crystal (Down)
entities.vitellary/forcedashcrystal.placements.name.downleft=Force Dash Crystal (Down Left)
entities.vitellary/forcedashcrystal.placements.name.left=Force Dash Crystal (Left)
entities.vitellary/forcedashcrystal.placements.name.upleft=Force Dash Crystal (Up Left)
entities.vitellary/forcedashcrystal.placements.name.none=Force Dash Crystal (None)
entities.vitellary/forcejumpcrystal.placements.name.force_jump_crystal=Force Jump Crystal
entities.vitellary/keyberry.placements.name.normal=Keyberry
entities.vitellary/keyberry.placements.name.winged=Keyberry (Winged)
entities.vitellary/returnkeyberry.placements.name.normal=Keyberry With Return
entities.vitellary/returnkeyberry.placements.name.winged=Keyberry With Return (Winged)
entities.vitellary/lockedintrocar.placements.name.locked_intro_car=Locked Intro Car
entities.vitellary/starcrystal.placements.name.star_crystal=Star Crystal
entities.vitellary/goodtelecrystal.placements.name.up=Tele Crystal (Up)
entities.vitellary/goodtelecrystal.placements.name.down=Tele Crystal (Down)
entities.vitellary/goodtelecrystal.placements.name.left=Tele Crystal (Left)
entities.vitellary/goodtelecrystal.placements.name.right=Tele Crystal (Right)
entities.vitellary/timecrystal.placements.name.normal=Time Crystal
entities.vitellary/timecrystal.placements.name.until_dash=Time Crystal (Until Dash)

triggers.vitellary/bloomstrengthtrigger.placements.name.bloom_strength_trigger=Bloom Strength Trigger
triggers.vitellary/canceltimecrystaltrigger.placements.name.cancel_time_crystal_trigger=Cancel Time Crystal Trigger
triggers.vitellary/custombridgeactivator.placements.name.custom_bridge_activator=Custom Bridge Activator
triggers.vitellary/customwindtrigger.placements.name.custom_wind_trigger=Custom Wind Trigger
triggers.vitellary/editdepthtrigger.placements.name.edit_depth_trigger=Edit Depth Trigger
triggers.vitellary/nodashtrigger.placements.name.no_dash_trigger=No Dash Trigger
triggers.vitellary/nograbtrigger.placements.name.no_grab_trigger=No Grab Trigger
triggers.vitellary/nojumptrigger.placements.name.no_jump_trigger=No Jump Trigger
triggers.vitellary/nomovetrigger.placements.name.no_move_trigger=Player Timestop Trigger
triggers.vitellary/resetdoortrigger.placements.name.reset_door_trigger=Reset Door Trigger
triggers.vitellary/timedfadetrigger.placements.name.timed_fade_trigger=Timed Fade Trigger
triggers.vitellary/triggertrigger.placements.name.coremode=Trigger Trigger (Core Mode)
triggers.vitellary/triggertrigger.placements.name.flag=Trigger Trigger (Flag)
triggers.vitellary/triggertrigger.placements.name.dashing=Trigger Trigger (Dashing)
triggers.vitellary/triggertrigger.placements.name.dashcount=Trigger Trigger (Dash Count)
triggers.vitellary/triggertrigger.placements.name.deathsinroom=Trigger Trigger (Deaths In Room)
triggers.vitellary/triggertrigger.placements.name.deathsinlevel=Trigger Trigger (Deaths In Level)
triggers.vitellary/triggertrigger.placements.name.grabholdable=Trigger Trigger (Holdable Grabbed)
triggers.vitellary/triggertrigger.placements.name.speedx=Trigger Trigger (Horizontal Speed)
triggers.vitellary/triggertrigger.placements.name.speedy=Trigger Trigger (Vertical Speed)
triggers.vitellary/triggertrigger.placements.name.jumping=Trigger Trigger (Jumping)
triggers.vitellary/triggertrigger.placements.name.crouching=Trigger Trigger (Crouching)
triggers.vitellary/triggertrigger.placements.name.timesincemovement=Trigger Trigger (Time Since Player Moved)
triggers.vitellary/triggertrigger.placements.name.onholdableenter=Trigger Trigger (Holdable Entered)
triggers.vitellary/triggertrigger.placements.name.onentitycollide=Trigger Trigger (On Entity Touch)
triggers.vitellary/triggertrigger.placements.name.oninteraction=Trigger Trigger (On Interaction)
triggers.vitellary/triggertrigger.placements.name.onsolid=Trigger Trigger (Touched Solid)
triggers.vitellary/triggertrigger.placements.name.onentityenter=Trigger Trigger (Entity Entered)

style.effects.CrystallineHelper/CustomWindSnow.name=Custom Wind Snow




# - Tooltips -

# Fill Crystal
entities.vitellary/fillcrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/fillcrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.

# Time Crystal
entities.vitellary/timecrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/timecrystal.attributes.description.stopLength=How long (in seconds) the crystal should stop time.
entities.vitellary/timecrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.
entities.vitellary/timecrystal.attributes.description.immediate=Whether the transition to time stopping should be smooth or instantaneous.
entities.vitellary/timecrystal.attributes.description.entityTypesToIgnore=List of class names for the time crystal to not affect, separated by commas.
entities.vitellary/timecrystal.attributes.description.timeScale=The time scale that the entities should be changed to.

# Tele Crystal
entities.vitellary/telecrystal.attributes.description.direction=The direction of the crystal.
entities.vitellary/telecrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/goodtelecrystal.attributes.description.direction=The direction of the crystal.
entities.vitellary/goodtelecrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/goodtelecrystal.attributes.description.preventCrash=If false, the crystal will attempt to move you as far as possible until you collide with a wall, which will crash the game if it never does collide with a wall.
entities.vitellary/goodtelecrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.

# Star Crystal
entities.vitellary/starcrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/starcrystal.attributes.description.time=How long the effect should last.
entities.vitellary/starcrystal.attributes.description.changeDashes=Whether the crystal should give you infinite dashes.
entities.vitellary/starcrystal.attributes.description.changeInvuln=Whether the crystal should make you invincible.
entities.vitellary/starcrystal.attributes.description.changeStamina=Whether the crystal should give you infinite stamina.
entities.vitellary/starcrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.

# Force Dash Crystal
entities.vitellary/forcedashcrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/forcedashcrystal.attributes.description.direction=Direction the player is forced to dash. If "None" is selected, the player dashes in the direction they hold.
entities.vitellary/forcedashcrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.
entities.vitellary/forcedashcrystal.attributes.description.needDash=Whether the crystal should require that you have a dash, and consume a dash when used.

# Force Jump Crystal
entities.vitellary/forcejumpcrystal.attributes.description.oneUse=Whether the refill should respawn after being used.
entities.vitellary/forcejumpcrystal.attributes.description.respawnTime=How long (in seconds) after using the crystal for it to respawn.
entities.vitellary/forcejumpcrystal.attributes.description.holdJump=Whether the jump should be a full height jump or a short hop.

# Keyberry
entities.vitellary/keyberry.attributes.description.winged=The keyberry attempts to vertically rise offscreen when the player dashes.

# Keyberry With Return
entities.vitellary/returnkeyberry.attributes.description.winged=The keyberry attempts to vertically rise offscreen when the player dashes.

# Linked Move Block
entities.vitellary/vitmoveblock.attributes.description.canSteer=Determines whether the move block can be moved by the player.
entities.vitellary/vitmoveblock.attributes.description.direction=Determines the direction the move block moves in upon activation.
entities.vitellary/vitmoveblock.attributes.description.remote=The group the move block gets activated with. 0 means it's a normal move block.
entities.vitellary/vitmoveblock.attributes.description.canActivate=Determines whether the player is able to activate the block by touching it.
entities.vitellary/vitmoveblock.attributes.description.spritePath=Path for the move block's sprite, relative to Graphics/Atlases/Gameplay.
entities.vitellary/vitmoveblock.attributes.description.moveSpeed=Speed the block will move at. Default is 75.

# Remote Trigger
entities.vitellary/remotetrigger.attributes.description.value=The Linked Move Block group the trigger activates.

# Reset Door Trigger
triggers.vitellary/resetdoortrigger.attributes.description.oneUse=Whether the trigger can be used more than once in the room.
triggers.vitellary/resetdoortrigger.attributes.description.animate=Whether doors and keys should animate upon respawning.
triggers.vitellary/resetdoortrigger.attributes.description.onlyInRoom=Whether the trigger should affect keys and doors outside of the current room.

# Custom Prologue Bridge and Activator
entities.vitellary/customprologuebridge.attributes.description.activationID=The ID used in the Activator to begin crumbling the bridge. Do not reuse IDs throughout the level!
entities.vitellary/customprologuebridge.attributes.description.activationIndex=Used to determine the order the bridges should fall. 0 is the first bridge that collapses.
entities.vitellary/customprologuebridge.attributes.description.left=Whether the bridge should start collapsing from the right side.
entities.vitellary/customprologuebridge.attributes.description.delay=How long to wait after the trigger has been activated / the previous bridge has finished collapsing before beginning to collapse.
entities.vitellary/customprologuebridge.attributes.description.speed=How fast the bridge should crumble. 0.8 is just slow enough that the player can keep up without dashing.
entities.vitellary/customprologuebridge.attributes.description.flag=If the flag is true, the bridge won't appear.
triggers.vitellary/custombridgeactivator.attributes.description.activationID=The ID for the group of bridges the trigger should activate.

# Custom Wind Trigger
triggers.vitellary/customwindtrigger.attributes.description.speedX=The horizontal speed of the wind. Can be a list of speeds, separated by commas. For reference, normal wind speed is 4, and strong is 8.
triggers.vitellary/customwindtrigger.attributes.description.speedY=The vertical speed of the wind. Can be a list of speeds, separated by commas. For reference, normal wind speed is 4, and strong is 8.
triggers.vitellary/customwindtrigger.attributes.description.alternationSpeed=The time, in seconds, that it takes to switch between speeds if there is a list in either horizontal or vertical speed. Can also be a list of speeds, separated by commas, which will be looped through.
triggers.vitellary/customwindtrigger.attributes.description.catchupSpeed=How fast the wind changes from the previous value. Default is 1.
triggers.vitellary/customwindtrigger.attributes.description.activationType=Special condition for the wind to activate.
triggers.vitellary/customwindtrigger.attributes.description.loop=Whether the wind should loop or just stop at the last values when going through a list of speeds.
triggers.vitellary/customwindtrigger.attributes.description.persist=If true, the wind created will stay after transitioning to a different room or dying. It will still be replaced by other wind triggers.
triggers.vitellary/customwindtrigger.attributes.description.oneUse=Whether the wind trigger should disappear after being used.
triggers.vitellary/customwindtrigger.attributes.description.onRoomEnter=Whether the wind trigger should activate immediately when the player enters its room, regardless of the player position.

# Custom Wind Snow
effects.CrystallineHelper/CustomWindSnow.attributes.description.colors=List of possible colors the wind particles can have, separated by commas.
effects.CrystallineHelper/CustomWindSnow.attributes.description.alphas=List of alphas associated with each color, separated by commas. If the amount of alphas is not the same as the amount of colors, each particle will just take the value of the first alpha listed.
effects.CrystallineHelper/CustomWindSnow.attributes.description.amount=Amount of particles. Default is 240.
effects.CrystallineHelper/CustomWindSnow.attributes.description.speedX=Horizontal speed that the effect has by default (does not affect gameplay). Current wind strength will be added to it.
effects.CrystallineHelper/CustomWindSnow.attributes.description.speedY=Vertical speed that the effect has by default (does not affect gameplay). Current wind strength will be added to it.
effects.CrystallineHelper/CustomWindSnow.attributes.description.ignoreWind=Whether the effect should change based on current wind.

# Player Timestop Trigger
triggers.vitellary/nomovetrigger.attributes.description.stopLength=Determines how long the player will be frozen for.

# Trigger Trigger
triggers.vitellary/triggertrigger.attributes.description.activationType=The condition the trigger checks. If you want to change this, you must update this option, then close and reopen this window, so that the correct options appear.\nFlag: When the flag is true. If the flag is left blank, it will always activate when entered.\nDashing: When the player inside is dashing.\nDash Count: If the player's dash count meets the condition specified.\nDeaths In Room: If the player has died the specified amount of times in the room.\nDeaths In Level: If the player has died the specified amount of times in the entire session.\nHoldable Grabbed: When the player grabs a holdable.\nHorizontal / Vertical Speed: If the player's speed meets the condition specified.\nJumping: When the player jumps.\nCrouching: When the player crouches.\nTime Since Player Moved: If the amount of time the player has stayed perfectly still meets the condition specified.\nHoldable Entered: When a holdable object enters the trigger.\nOn Entity Touch: When the amount of times the player touches the specified type of entity meets the condition specified.\nCore Mode: If the core mode of the level matches the specified mode.\nOn Interaction: When the player interacts (via talk button) with the trigger.\nTouched Solid: If the player is either standing on or grabbing the specified solid, or any solid or platform if none is specified.\nEntity Entered: When the specified type of entity enters the trigger.
triggers.vitellary/triggertrigger.attributes.description.oneUse=Whether the trigger disappears after being used.
triggers.vitellary/triggertrigger.attributes.description.flag=Flag that must be active for the trigger to be used. If left blank, trigger will not require a flag.
triggers.vitellary/triggertrigger.attributes.description.invertFlag=Whether the flag specified should be false instead of true.
triggers.vitellary/triggertrigger.attributes.description.delay=How long to wait after activating the trigger for it to activate the chosen triggers.
triggers.vitellary/triggertrigger.attributes.description.activateOnTransition=If true, then the trigger will activate upon entering the room.
triggers.vitellary/triggertrigger.attributes.description.randomize=If true, the trigger will randomly activate only one of the chosen triggers instead of all of them.
triggers.vitellary/triggertrigger.attributes.description.matchPosition=If enabled, the selected triggers will be moved and resized to match this trigger. Allows triggers that change based on position, such as Light Fade, to work.
triggers.vitellary/triggertrigger.attributes.description.invertCondition=Whether the condition should not be met in order to activate.
triggers.vitellary/triggertrigger.attributes.description.onlyOnEnter=Whether the trigger should only check the condition the first time you enter it, instead of checking every frame you're inside it.
triggers.vitellary/triggertrigger.attributes.description.comparisonType=For numerical comparisons, whether the requirement should be less than, equal to or greater than the specified value.
triggers.vitellary/triggertrigger.attributes.description.absoluteValue=For numerical comparisons, whether the comparison should only consider the absolute value for the requirement.
triggers.vitellary/triggertrigger.attributes.description.deaths=How many times the player needs to have died. Depending on the trigger chosen, will refer to either deaths only within the room (resets upon exiting the room) or total deaths in the level (resets upon restarting chapter / returning to map).
triggers.vitellary/triggertrigger.attributes.description.dashCount=How many dashes the player needs to have.
triggers.vitellary/triggertrigger.attributes.description.requiredSpeed=How much speed the player should have, in pixels/second. Positive means right / down, negative means left / up. Some values to reference:\nDefault walking speed is 90.\nDefault dashing speed is 240.\nDefault hyper speed is 325.
triggers.vitellary/triggertrigger.attributes.description.timeToWait=How long the player needs to wait, in seconds.
triggers.vitellary/triggertrigger.attributes.description.coreMode=Core mode the level needs to be.
triggers.vitellary/triggertrigger.attributes.description.entityType=Class name of the type of entity to check.
triggers.vitellary/triggertrigger.attributes.description.solidType=Class name of the type of solid to check. If left blank, the trigger will allow any solids to be considered.

# Edit Depth Trigger
triggers.vitellary/editdepthtrigger.attributes.description.depth=New depth to set the entity to. Lower / negative values will make the entities render above others.
triggers.vitellary/editdepthtrigger.attributes.description.entitiesToAffect=The class name of the entity to alter. Can be a comma separated list of multiple entity types as well.
triggers.vitellary/editdepthtrigger.attributes.description.debug=If true, then Celeste will write the names of all entities touching the trigger in the log (can be seen in log.txt immediately), as well as their current depths. Useful to figure out the names of the entities you'd like to affect, though remember to disable the option later.
triggers.vitellary/editdepthtrigger.attributes.description.updateOnEntry=If true, the trigger will affect entities that move into it; otherwise, it will only affect entities that are touching it when the room loads.

# Bloom Strength Trigger
triggers.vitellary/bloomstrengthtrigger.attributes.description.bloomStrengthFrom=Determines where the bloom strength starts.
triggers.vitellary/bloomstrengthtrigger.attributes.description.bloomStrengthTo=Determines where the bloom strength ends.
triggers.vitellary/bloomstrengthtrigger.attributes.description.positionMode=Determines which direction the bloom strength fades towards.

# Timed Fade Trigger
triggers.vitellary/timedfadetrigger.attributes.description.time=How long to fade from the From value to the To value.

# Flag Sequence On Spawn Controller
entities.vitellary/flagsequencecontroller.attributes.description.startNumber=The first number to start the sequence.
entities.vitellary/flagsequencecontroller.attributes.description.endNumber=The final number in the sequence.
entities.vitellary/flagsequencecontroller.attributes.description.prefix=The text that prefixes each flag set. For example, prefix "flagname" with Start Number 8 and End Number 11 will set "flagname_08", "flagname_09", "flagname_10", and "flagname_11" all to the specified state.
entities.vitellary/flagsequencecontroller.attributes.description.state=The state to set all of the flags to.
entities.vitellary/flagsequencecontroller.attributes.description.onlyOnRespawn=Whether the flag should only be set when respawning in the room, and not entering it.
